// SPDX-License-Identifier: GPL-2.0+ OR MIT
/*
* Copyright 2021 Au-Zone
*/

/dts-v1/;

#include "imx8mp-maivin.dtsi"

/ {
	model = "Maivin AI Vision Starter Kit";
	compatible = "toradex,verdin-imx8mp-nonwifi",
	"toradex,verdin-imx8mp",
	"fsl,imx8mp";

	m2_3v3: regulator-m2-3v3 {
		compatible = "regulator-fixed";
		regulator-name = "M2_3V3";
		regulator-max-microvolt = <3300000>;
		regulator-min-microvolt = <3300000>;
		pinctrl-0 = <&pinctrl_m2_3v3>;
		gpio = <&gpio3 1 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};

	/* Carrier Board Supply 3V3_SW */
	reg_3v3: regulator-3v3-sw {
		compatible = "regulator-fixed";
		regulator-max-microvolt = <3300000>;
		regulator-min-microvolt = <3300000>;
		regulator-name = "3V3_SW";
	};
};

&eqos {
	status = "okay";
};

/* Disable IEEE power saving */
&ethphy0 {
	eee-broken-100tx;
	eee-broken-1000t;
};

/* Verdin I2C_2_DSI */
#if 0
&i2c2 {
	status = "okay";

	clock-frequency = <400000>;
	scl-gpios = <&gpio5 16 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio5 17 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;

	dac@d {
		compatible = "ti,dac081c081", "ti,dac5571";
		reg = <0x0d>;
		vref-supply = <&csi_3v3>;
	};
};
#endif
/* Verdin I2C_1 */
&i2c4 {
	status = "okay";

	/* To be compatible with old versions of the board */
	temp-sensor@4a {
		compatible = "ti,tmp102","tmp102";
		reg = <0x4a>;
	};

	temp-sensor@4b {
		compatible = "ti,tmp102", "tmp102";
		reg = <0x4b>;
	};
};

&iomuxc {
	pinctrl-0 = <&pinctrl_gpio1>, <&pinctrl_gpio2>,
	<&pinctrl_gpio3>, <&pinctrl_gpio4>,
	<&pinctrl_gpio_hog1>, <&pinctrl_gpio_hog2>, <&pinctrl_gpio_hog3>,
	<&pinctrl_hdmi_hog>;

	pinctrl_flexspi0: flexspi0grp {
		fsl,pins = <
		MX8MP_IOMUXC_NAND_READY_B__GPIO3_IO16           0x1C4   /* SODIMM 64 */
		/*
		* Setting bit 8(Pull up select field) high to enable pull
		* Setting bit 7(Input select field) high to use Schmitt
		* Setting bit 2(Drive strength field) high
		* Setting bit 6(Pull Up/Down config field) high
		* This needs to be a pull up since when the SW1 switch is pressed it is
		* shorting this pin to ground
		*/

		MX8MP_IOMUXC_NAND_DATA00__FLEXSPI_A_DATA00      0x82    /* SODIMM 56 */
		MX8MP_IOMUXC_NAND_DATA03__FLEXSPI_A_DATA03      0x82    /* SODIMM 62 */
		>;
	};


	pinctrl_m2_3v3: m2-3v3-grp {
		fsl,pins = <
		MX8MP_IOMUXC_NAND_CE0_B__GPIO3_IO01             0x82    /* SODIMM 54 */
		>;
	};

	powerdown_enable: pwdn_en {
		fsl,pins = <
		MX8MP_IOMUXC_SAI3_TXD__GPIO5_IO01               0x142   /* SODIMM 46  */
		>;
	};

	reset_enable: reset_en {
		fsl,pins = <
		MX8MP_IOMUXC_SAI3_RXD__GPIO4_IO30               0x142   /* SODIMM 48 */
		>;
	};
};


&reg_usdhc2_vmmc {
	vin-supply = <&reg_3v3>;
};

/* Verdin UART_1 to Maivin RS-485 on rear connector */
&uart1 {
	fsl,uart-has-rtscts;
	linux,rs485-enabled-at-boot-time;
	rs485-rts-active-low;
	rs485-rx-during-tx;
	status = "okay";
};

/* Verdin UART_2, for M.2 card slot */
&uart2 {
	status = "okay";
};

/* Verdin UART_3, internal UART headers used as the Linux Console */
&uart3 {
	status = "okay";
};

/* Verdin USB_1, USB recovery */
&usb3_phy0 {
	status = "okay";
};

&usb3_0 {
	status = "okay";
};

&usb_dwc3_0 {
	status = "okay";
};

/* Verdin USB_2, for M.2 card slot */
&usb3_phy1 {
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&usb_dwc3_1 {
	status = "okay";
};

&reg_usdhc2_vmmc {
	vin-supply = <&reg_3p3v>;
};

/* Verdin SD_1, for SD card slot */
&usdhc2 {
	/* Limit frequency on dev board due to long traces and bad signal integrity */
	// TODO: Is this needed on Maivin?
	max-frequency = <100000000>;
	status = "okay";
};

/* Verdin SPI_1 */
&ecspi1 {
	status = "okay";
};

/* EEPROM on Verdin Development board */
&eeprom_carrier_board {
	status = "okay";
};

&eqos {
	status = "okay";
};

&flexcan1 {
	status = "okay";
};

&flexcan2 {
	status = "okay";
};

/* Verdin QSPI_1 */
&flexspi {
	status = "okay";
};

/* Current measurement into module VCC */
&hwmon {
	status = "okay";
};

&hwmon_temp {
	vs-supply = <&reg_1p8v>;
	status = "okay";
};

/* Verdin I2C_2_DSI */
&i2c2 {
	status = "okay";
};

&i2c3 {
	status = "okay";
};

/* Verdin I2C_1 */
&i2c4 {
	status = "okay";
};

/* Verdin PWM_1 */
&pwm1 {
	status = "okay";
};

/* Verdin PWM_2 */
&pwm2 {
	status = "okay";
};

/* Verdin PWM_3_DSI */
&pwm3 {
	status = "okay";
};
